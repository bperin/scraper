# The manifest for the "scraper" service.
# Read the full specification for the "Load Balanced Web Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: scraper
type: Load Balanced Web Service

# Distribute traffic to your service.
http:
  # Requests to this path will be forwarded to your service.
  # To match all requests you can use the "/" path.
  path: "/"
  # You can specify a custom health check path. The default is "/".
  healthcheck:
    path: "/health"
    healthy_threshold: 2
    unhealthy_threshold: 5
    interval: 10s
    timeout: 5s
    grace_period: 120s
  public:
    certificates:
      - arn:aws:acm:us-east-1:422220778159:certificate/d1259492-082d-4ad9-b641-b754caef46b5

image:
  build:
    dockerfile: Dockerfile
    context: .
  port: 3100

cpu: 2048 # 2 vCPU
memory: 8192 # 8 GB RAM
platform: linux/arm64 # See https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/#platform
count: 1 # Number of tasks that should be running in your service.
exec: true # Enable running commands in your container.
network:
  connect: true # Enable Service Connect for intra-environment traffic between services.

# storage:
# readonly_fs: true       # Limit to read-only access to mounted root filesystems.

# Optional fields for more advanced use-cases.
#
variables: # Pass environment variables as key value pairs.
  LOG_LEVEL: info
  PORT: 3100

# secrets:
#   SCRAPER_API_KEY: SCRAPER_API_KEY

# You can override any of the values defined above by environment.
#environments:
#  test:
#    count: 2               # Number of tasks to run for the "test" environment.
#    deployment:            # The deployment strategy for the "test" environment.
#       rolling: 'recreate' # Stops existing tasks before new ones are started for faster deployments.

environments:
  production:
    count: 1
    cpu: 4096 # 4 vCPU for production
    memory: 16384 # 16 GB RAM for production
    http:
      alias:
        - name: "scraper.amastay.ai"
          hosted_zone: Z09051732Y0SGEMJ22C94

  staging:
    count: 1
    http:
      alias:
        - name: "staging-scraper.amastay.ai"
          hosted_zone: Z09051732Y0SGEMJ22C94

  develop:
    count: 1
    http:
      alias:
        - name: "develop-scraper.amastay.ai"
          hosted_zone: Z09051732Y0SGEMJ22C94

observability:
  container_health_check:
    command: ["CMD-SHELL", "curl -f http://localhost:3100/health || exit 1"]
    interval: 30s
    timeout: 10s
    start_period: 60s
    retries: 3

# Add deployment configuration for more graceful updates
deployment:
  rolling: recreate
  circuit_breaker:
    enabled: true
    rollback: true
  variables:
    ECS_ENABLE_CONTAINER_METADATA: true
  deployment_configuration:
    minimum_healthy_percent: 50
    maximum_percent: 200
